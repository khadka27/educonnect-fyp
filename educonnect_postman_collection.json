{
  "info": {
    "name": "EduConnect API Tests",
    "description": "A comprehensive collection of API tests for the EduConnect application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Socket.IO Tests",
      "description": "WebSocket API tests for real-time communication",
      "item": [
        {
          "name": "Join Room",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"joinRoom\",\"data\":\"test-user-123\"}"
            },
            "description": "Join a room based on user ID"
          }
        },
        {
          "name": "Join Group",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"joinGroup\",\"data\":\"group-123\"}"
            },
            "description": "Join a group room"
          }
        },
        {
          "name": "Fetch Groups",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"fetchGroups\",\"data\":\"user-123\"}"
            },
            "description": "Fetch all groups for a user"
          }
        },
        {
          "name": "Fetch Users",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"fetchUsers\"}"
            },
            "description": "Fetch all users"
          }
        },
        {
          "name": "Create Group",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"createGroup\",\"data\":{\"teacherId\":\"teacher-123\",\"groupName\":\"Math Class\"}}"
            },
            "description": "Create a new group (teachers only)"
          }
        },
        {
          "name": "Add User to Group",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"addUserToGroup\",\"data\":{\"adminId\":\"teacher-123\",\"groupId\":\"group-123\",\"userId\":\"student-456\"}}"
            },
            "description": "Add a user to a group (admin only)"
          }
        },
        {
          "name": "Fetch Group Messages",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"fetchGroupMessages\",\"data\":\"group-123\"}"
            },
            "description": "Fetch all messages for a group"
          }
        },
        {
          "name": "Send Group Message",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"sendGroupMessage\",\"data\":{\"content\":\"Hello group!\",\"senderId\":\"user-123\",\"groupId\":\"group-123\"}}"
            },
            "description": "Send a message to a group"
          }
        },
        {
          "name": "Kick User from Group",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"kickUserFromGroup\",\"data\":{\"adminId\":\"teacher-123\",\"groupId\":\"group-123\",\"userId\":\"student-456\"}}"
            },
            "description": "Kick a user from a group (admin only)"
          }
        },
        {
          "name": "Leave Group",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"leaveGroup\",\"data\":{\"userId\":\"user-123\",\"groupId\":\"group-123\"}}"
            },
            "description": "Leave a group"
          }
        },
        {
          "name": "Rename Group",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"renameGroup\",\"data\":{\"adminId\":\"teacher-123\",\"groupId\":\"group-123\",\"newGroupName\":\"Advanced Math Class\"}}"
            },
            "description": "Rename a group (admin only)"
          }
        },
        {
          "name": "Fetch Messages",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"fetchMessages\",\"data\":{\"senderId\":\"user-123\",\"receiverId\":\"user-456\"}}"
            },
            "description": "Fetch direct messages between two users"
          }
        },
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"sendMessage\",\"data\":{\"content\":\"Hello, this is a direct message\",\"senderId\":\"user-123\",\"receiverId\":\"user-456\"}}"
            },
            "description": "Send a direct message to another user"
          }
        },
        {
          "name": "Send File (Direct)",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"sendFile\",\"data\":{\"fileName\":\"document.pdf\",\"fileType\":\"pdf\",\"fileData\":\"base64_encoded_file_data\",\"senderId\":\"user-123\",\"receiverId\":\"user-456\",\"groupId\":null}}"
            },
            "description": "Send a file in a direct message"
          }
        },
        {
          "name": "Send File (Group)",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"sendFile\",\"data\":{\"fileName\":\"document.pdf\",\"fileType\":\"pdf\",\"fileData\":\"base64_encoded_file_data\",\"senderId\":\"user-123\",\"receiverId\":null,\"groupId\":\"group-123\"}}"
            },
            "description": "Send a file in a group message"
          }
        },
        {
          "name": "Mark Message as Read",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"markAsRead\",\"data\":\"message-123\"}"
            },
            "description": "Mark a message as read"
          }
        },
        {
          "name": "Fetch Unseen Messages",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "http://localhost:3000/socket.io/?EIO=4&transport=websocket",
              "protocol": "http",
              "host": ["localhost"],
              "port": "3000",
              "path": ["socket.io"],
              "query": [
                {
                  "key": "EIO",
                  "value": "4"
                },
                {
                  "key": "transport",
                  "value": "websocket"
                }
              ]
            },
            "body": {
              "mode": "raw",
              "raw": "{\"event\":\"fetchUnseenMessages\",\"data\":\"user-123\"}"
            },
            "description": "Fetch all unseen messages for a user"
          }
        }
      ]
    },
    {
      "name": "Get CSRF Token",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{base_url}}/api/auth/csrf",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "csrf"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has csrfToken\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('csrfToken');",
              "    pm.environment.set(\"csrf_token\", jsonData.csrfToken);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Login",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/auth/signin",
          "host": ["{{base_url}}"],
          "path": ["api", "auth", "signin"]
        },
        "body": {
          "mode": "raw",
          "raw": "{\n    \"email\": \"{{user_email}}\",\n    \"password\": \"password123\",\n    \"csrfToken\": \"{{csrf_token}}\"\n}"
        }
      }
    }
  ]
}
